/******/ (function() { // webpackBootstrap
var __webpack_exports__ = {};
$(function() {
	var resizeEvt;

	$('.svgload').load('svg/svgdefs.html');

	$(window).on("resize", function() {
		clearTimeout(resizeEvt);
		resizeEvt = setTimeout(function() {
			if($('main').hasClass('hasimg')) {
				saveFilters();
				$('.imgcanv')[0].width = window.innerWidth;
				$('.imgcanv')[0].height = window.innerHeight - 150;

				loadImg();
				loadSaved();
			} else {
				$('.imgcanv')[0].width = window.innerWidth;
				$('.imgcanv')[0].height = window.innerHeight - 150;
			}
		}, 250);
	});

	$('.imgcanv')[0].width = window.innerWidth;
	$('.imgcanv')[0].height = window.innerHeight - 150;

	$('.loadimg').on('change', loadImg);
});

function loadImg() {
	var input = $('.loadimg')[0],
		file,
		fr,
		img;


	$('.loader').toggleClass('hide');

	if(typeof window.FileReader !== 'function') {
		alert('FILTERR is not supported by your browser!');
		return false;
	}

	if(!input) {
		alert('No file!');
		$('.loader').toggleClass('hide');
	} else if(!input.files) {
		alert('Browser does not support "files" property of file inputs.');
		$('.loader').toggleClass('hide');
	} else if(!input.files[0]) {
		alert('Please select a file first!');
		$('.loader').toggleClass('hide');
	} else {
		resetAll();
		file = input.files[0];
		fr = new FileReader();
		fr.onload = createImg;
		fr.readAsDataURL(file);
	}

	function createImg() {
		img = new Image();
		img.onload = imgLoaded;
		img.src = fr.result;
	}

	function imgLoaded() {
		var canvas = $('.imgcanv')[0],
			context = canvas.getContext('2d'),
			imgWidth = img.naturalWidth,
			imgHeight = img.naturalHeight,
			canvWidth = canvas.width,
			canvHeight = canvas.height;

		if(imgWidth > imgHeight) {
			var newHeight = imgWidth / canvWidth * 100;

			if(newHeight <= 100) {
				$('main').addClass('hasimg');
				context.clearRect(0, 0, canvWidth, canvHeight);
				context.drawImage(img,
					canvWidth / 2 - (imgWidth - 40) / 2,
					canvHeight / 2 - (imgHeight - 40) / 2,
					imgWidth - 40, imgHeight - 40);
				$('.loader').toggleClass('hide');
			} else {
				var factor = newHeight / 100,
					drawHeight = imgHeight / factor;

				$('main').addClass('hasimg');
				context.clearRect(0, 0, canvWidth, canvHeight);
				context.drawImage(img,
					canvWidth / 2 - (canvWidth - 40) / 2,
					canvHeight / 2 - (drawHeight - 40) / 2,
					canvWidth - 40, drawHeight - 40);
				$('.loader').toggleClass('hide');
			}
		} else if(imgHeight >= imgWidth) {
			var newWidth = imgHeight / canvHeight * 100;

			if(newWidth <= 100) {
				$('main').addClass('hasimg');
				context.clearRect(0, 0, canvWidth, canvHeight);
				context.drawImage(img,
					canvWidth / 2 - (imgWidth - 40) / 2,
					canvHeight / 2 - (imgHeight - 40) / 2,
					imgWidth - 40, imgHeight - 40);
				$('.loader').toggleClass('hide');
			} else {
				var factor = newWidth / 100,
					drawWidth = imgWidth / factor;

				$('main').addClass('hasimg');
				context.clearRect(0, 0, canvWidth, canvHeight);
				context.drawImage(img,
					canvWidth / 2 - (drawWidth - 40) / 2,
					canvHeight / 2 - (canvHeight - 40) / 2,
					drawWidth - 40, canvHeight - 40);
				$('.loader').toggleClass('hide');
			}
		}
	}
}



var filters = {
		brightness: [0, 200, 100],
		contrast: [0, 200, 100],
		grayscale: [0, 100, 0],
		hueRotate: [0, 360, 0],
		invert: [0, 100, 0],
		saturate: [0, 200, 100],
		sepia: [0, 100, 0]
	},
	defaults = {
		brightness: 100,
		contrast: 100,
		grayscale: 0,
		hueRotate: 0,
		invert: 0,
		saturate: 100,
		sepia: 0
	},
	saved = {
		brightness: [0, 200, 100],
		contrast: [0, 200, 100],
		grayscale: [0, 100, 0],
		hueRotate: [0, 360, 0],
		invert: [0, 100, 0],
		saturate: [0, 200, 100],
		sepia: [0, 100, 0]
	},
	canvas = $('.imgcanv'),
	slider = $('.slider'),
	currentFilter = slider.attr('data-currentfilter');

slider.on('input change', function() {
	var currentFilter = slider.attr('data-currentfilter'),
		val = $(this)[0].value;

	if(typeof currentFilter !== 'undefined' || currentFilter === null) {
		filters[currentFilter][2] = val;
		applyFilter();
	} else {
		return false;
	}
});

$('.tool').on('click', function() {
	if($('main').hasClass('hasimg')){
		$(this).addClass('active');
		$(this).siblings().removeClass('active');
		setCurrent($(this).attr('data-tool'));
	} else {
		return false;
	}
});

$('.resetall').on('click', resetAll);

function resetAll() {
	var currentFilter = slider.attr('data-currentfilter');

	if(typeof currentFilter !== 'undefined' || currentFilter === null) {
		filters.brightness[2] = defaults.brightness;
		filters.contrast[2] = defaults.contrast;
		filters.grayscale[2] = defaults.grayscale;
		filters.hueRotate[2] = defaults.hueRotate;
		filters.invert[2] = defaults.invert;
		filters.saturate[2] = defaults.saturate;
		filters.sepia[2] = defaults.sepia;
		applyFilter();
		setCurrent(currentFilter);
	} else {
		return false;
	}
}

$('.resetcurrent').on('click', resetCurrent);

function resetCurrent() {
	var currentFilter = slider.attr('data-currentfilter');

	if(typeof currentFilter !== 'undefined' || currentFilter === null) {
		filters[currentFilter][2] = defaults[currentFilter];
		applyFilter();
		setCurrent(currentFilter);
	} else {
		return false;
	}
}

function setCurrent(filter) {
	if($('main').hasClass('hasimg')) {
		if(typeof filter !== 'undefined' || filter === null) {
			slider.attr('data-currentfilter', filter);
			slider[0].min = filters[filter][0];
			slider[0].max = filters[filter][1];
			slider[0].value = filters[filter][2];
		} else {
			return false;
		}
	} else {
		return false;
	}
}

function applyFilter() {
	canvas.css({
		'filter' :
			' brightness(' + filters.brightness[2] + '%)' +
			' contrast(' + filters.contrast[2] + '%)' +
			' grayscale(' + filters.grayscale[2] + '%)' +
			' hue-rotate(' + filters.hueRotate[2] + 'deg)' +
			' invert(' + filters.invert[2] + '%)' +
			' saturate(' + filters.saturate[2] + '%)' +
			' sepia(' + filters.sepia[2] + '%)',
		'-webkit-filter' :
			' brightness(' + filters.brightness[2] + '%)' +
			' contrast(' + filters.contrast[2] + '%)' +
			' grayscale(' + filters.grayscale[2] + '%)' +
			' hue-rotate(' + filters.hueRotate[2] + 'deg)' +
			' invert(' + filters.invert[2] + '%)' +
			' saturate(' + filters.saturate[2] + '%)' +
			' sepia(' + filters.sepia[2] + '%)'
	});

}

function saveFilters() {
	saved.brightness[2] = filters.brightness[2];
	saved.contrast[2] = filters.contrast[2];
	saved.grayscale[2] = filters.grayscale[2];
	saved.hueRotate[2] = filters.hueRotate[2];
	saved.invert[2] = filters.invert[2];
	saved.saturate[2] = filters.saturate[2];
	saved.sepia[2] = filters.sepia[2];
}

function loadSaved() {
	var currentFilter = slider.attr('data-currentfilter');

	if(typeof currentFilter !== 'undefined' || currentFilter === null) {
		filters.brightness[2] = saved.brightness[2];
		filters.contrast[2] = saved.contrast[2];
		filters.grayscale[2] = saved.grayscale[2];
		filters.hueRotate[2] = saved.hueRotate[2];
		filters.invert[2] = saved.invert[2];
		filters.saturate[2] = saved.saturate[2];
		filters.sepia[2] = saved.sepia[2];
		applyFilter();
		setCurrent(currentFilter);
	} else {
		return false;
	}
}

/******/ })()
;